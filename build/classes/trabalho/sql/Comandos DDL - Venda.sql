CREATE TABLE SISTEMA.USUARIO(
    USU_CODIGO   INTEGER NOT NULL,
    USU_NOME     VARCHAR2(50),
    USU_LOGIN    VARCHAR2(50),
    USU_SENHA    VARCHAR2(50),
    USU_CADASTRO DATE,
    USU_ATIVO    VARCHAR2(50) CHECK(UPPER(USU_ATIVO) = 'ATIVO' OR (UPPER(USU_ATIVO) = 'INATIVO'))
);

ALTER TABLE SISTEMA.USUARIO
    ADD CONSTRAINT PK_USUARIO
    PRIMARY KEY(USU_CODIGO);

CREATE SEQUENCE SQE_USUARIO
    START WITH 101010
    INCREMENT BY 100
    MAXVALUE 999999999999
    MINVALUE 101010
    NOCACHE;

CREATE TRIGGER TRG_USUARIO_AUTO BEFORE INSERT ON SISTEMA.USUARIO
FOR EACH ROW 
BEGIN

    SELECT SQE_USUARIO.NEXTVAL INTO :NEW.USU_CODIGO
    FROM   DUAL;

END;
    
CREATE TABLE SISTEMA.PESSOA(
    PES_CODIGO      INTEGER NOT NULL,
    PES_NOME        VARCHAR2(50),
    PES_FANTASIA    VARCHAR2(80),
    PES_FISICA      VARCHAR2(50) CHECK(UPPER(PES_FISICA) = 'SIM' OR (UPPER(PES_FISICA) = 'NÃO')),
    PES_CPFCNPJ     VARCHAR2(50) NOT NULL UNIQUE,
    PES_RGIE        VARCHAR2(50) NOT NULL,
    PES_CADASTRO    DATE,
    PES_ENDERECO    VARCHAR2(80),
    PES_NUMERO      VARCHAR2(50),
    PES_COMPLEMENTO VARCHAR2(80),
    PES_BAIRRO      VARCHAR2(50),
    PES_CIDADE      VARCHAR2(50),
    PES_UF          CHAR(2),
    PES_CEP         VARCHAR2(50),
    PES_FONE1       VARCHAR2(50) NOT NULL,
    PES_FONE2       VARCHAR2(50),
    PES_CELULAR     VARCHAR2(50),
    PES_SITE        VARCHAR2(80),
    PES_EMAIL       VARCHAR2(80),
    PES_ATIVO       VARCHAR2(50) CHECK(UPPER(PES_ATIVO) = 'ATIVO' OR (UPPER(PES_ATIVO) = 'INATIVO'))
);

ALTER TABLE SISTEMA.PESSOA
    ADD CONSTRAINT PK_PESSOA
    PRIMARY KEY(PES_CODIGO);

CREATE SEQUENCE SQE_PESSOA
    START WITH 101010
    INCREMENT BY 100
    MAXVALUE 999999999999
    MINVALUE 101010
    NOCACHE;

CREATE TRIGGER TRG_PESSOA_AUTO BEFORE INSERT ON SISTEMA.PESSOA
FOR EACH ROW 
BEGIN

    SELECT SQE_PESSOA.NEXTVAL INTO :NEW.PES_CODIGO
    FROM   DUAL;

END;

CREATE TABLE SISTEMA.PRODUTO(
    PRO_CODIGO    INTEGER NOT NULL,
    PRO_NOME      VARCHAR2(50) NOT NULL,
    PRO_ESTOQUE   INTEGER,
    PRO_UNIDADE   INTEGER,
    PRO_PRECO     DECIMAL(10,2),
    PRO_CUSTO     DECIMAL(10,2),
    PRO_ATACADO   DECIMAL(10,2),
    PRO_MIN       DECIMAL(10,2),
    PRO_MAX       DECIMAL(10,2),
    PRO_EMBALAGEM DECIMAL(10,2),
    PRO_PESO      DECIMAL(10,2),
    PRO_CADASTRO  DATE,
    PRO_OBS       VARCHAR2(100),
    PRO_ATIVO     VARCHAR2(50) CHECK(UPPER(PRO_ATIVO) = 'ATIVO' OR (UPPER(PRO_ATIVO) = 'INATIVO'))
);

ALTER TABLE SISTEMA.PRODUTO
    ADD CONSTRAINT PK_PRODUTO
    PRIMARY KEY(PRO_CODIGO);

CREATE SEQUENCE SQE_PRODUTO
    START WITH 10
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 10
    NOCACHE;

CREATE TRIGGER TRG_PRODUTO_AUTO BEFORE INSERT ON SISTEMA.PRODUTO
FOR EACH ROW 
BEGIN

    SELECT SQE_PRODUTO.NEXTVAL INTO :NEW.PRO_CODIGO
    FROM   DUAL;

END;
    
CREATE TABLE SISTEMA.FORMAPAGTO(
    FPG_CODIGO INTEGER NOT NULL,
    FPG_NOME   VARCHAR2(50) NOT NULL,
    FPG_ATIVO  VARCHAR2(50) CHECK(UPPER(FPG_ATIVO) = 'ATIVO' OR (UPPER(FPG_ATIVO) = 'INATIVO'))
);

select * from sistema.usuario;

ALTER TABLE SISTEMA.FORMAPAGTO
    ADD CONSTRAINT PK_FORMAPAGTO
    PRIMARY KEY(FPG_CODIGO);

CREATE SEQUENCE SQE_FORMAPAGTO
    START WITH 101010
    INCREMENT BY 100
    MAXVALUE 999999999999
    MINVALUE 101010
    NOCACHE;

CREATE TRIGGER TRG_FORMAPAGTO_AUTO BEFORE INSERT ON SISTEMA.FORMAPAGTO
FOR EACH ROW 
BEGIN

    SELECT SQE_FORMAPAGTO.NEXTVAL INTO :NEW.FPG_CODIGO
    FROM   DUAL;

END;

CREATE TABLE SISTEMA.CLIENTE(
    CLI_CODIGO     INTEGER NOT NULL,
    PES_CODIGO     INTEGER NOT NULL,
    CLI_LIMITECRED DECIMAL(10,2)
);

ALTER TABLE SISTEMA.CLIENTE
    ADD CONSTRAINT PK_CLIENTE
    PRIMARY KEY(CLI_CODIGO);
    
ALTER TABLE SISTEMA.CLIENTE
    ADD CONSTRAINT FK_PESSOA_CLIENTE
    FOREIGN KEY(PES_CODIGO) REFERENCES SISTEMA.PESSOA;
    
CREATE SEQUENCE SQE_CLIENTE
    START WITH 101010
    INCREMENT BY 100
    MAXVALUE 999999999999
    MINVALUE 101010
    NOCACHE;

CREATE TRIGGER TRG_CLIENTE_AUTO BEFORE INSERT ON SISTEMA.CLIENTE
FOR EACH ROW 
BEGIN

    SELECT SQE_CLIENTE.NEXTVAL INTO :NEW.CLI_CODIGO
    FROM   DUAL;

END;

CREATE TABLE SISTEMA.FORNECEDOR(
    FOR_CODIGO INTEGER NOT NULL,
    PES_CODIGO INTEGER NOT NULL,
    FOR_CONTATO VARCHAR2(50) NOT NULL
);

ALTER TABLE SISTEMA.FORNECEDOR
    ADD CONSTRAINT PK_FORNECEDOR
    PRIMARY KEY(FOR_CODIGO);
    
ALTER TABLE SISTEMA.FORNECEDOR
    ADD CONSTRAINT FK_PESSOA_FORNECEDOR
    FOREIGN KEY(PES_CODIGO) REFERENCES SISTEMA.PESSOA;


CREATE SEQUENCE SQE_FORNECEDOR
    START WITH 1000
    INCREMENT BY 100
    MAXVALUE 999999999999
    MINVALUE 1000
    NOCACHE;

CREATE TRIGGER TRG_FORNECEDOR_AUTO BEFORE INSERT ON SISTEMA.FORNECEDOR
FOR EACH ROW 
BEGIN

    SELECT SQE_FORNECEDOR.NEXTVAL INTO :NEW.FOR_CODIGO
    FROM   DUAL;

END;
    
CREATE TABLE SISTEMA.COMPRA(
    CRP_CODIGO    INTEGER NOT NULL,
    USU_CODIGO    INTEGER NOT NULL,
    FOR_CODIGO    INTEGER NOT NULL,
    CRP_EMISSAO   DATE,
    CRP_VALOR     DECIMAL(10,2),
    CRP_DESCONTO  DECIMAL(10,2),
    CRP_TOTAL     DECIMAL(10,2),
    CRP_DTENTRADA DATE,
    CRP_OBS       VARCHAR2(100)
);

ALTER TABLE SISTEMA.COMPRA
    ADD CONSTRAINT PK_COMPRA
    PRIMARY KEY(CRP_CODIGO);
    
ALTER TABLE SISTEMA.COMPRA
    ADD CONSTRAINT FK_USUARIO_COMPRA
    FOREIGN KEY(USU_CODIGO) REFERENCES SISTEMA.USUARIO;

ALTER TABLE SISTEMA.COMPRA
    ADD CONSTRAINT FK_FORNECEDOR_COMPRA
    FOREIGN KEY(FOR_CODIGO) REFERENCES SISTEMA.FORNECEDOR;

DROP SEQUENCE SQE_COMPRA;
CREATE SEQUENCE SQE_COMPRA
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCACHE;
    
CREATE TRIGGER TRG_COMPRA_AUTO BEFORE INSERT ON SISTEMA.COMPRA
FOR EACH ROW 
BEGIN

    SELECT SQE_COMPRA.NEXTVAL INTO :NEW.CRP_CODIGO
    FROM   DUAL;

END;

CREATE OR REPLACE TRIGGER TRG_COMPRA_TOTAL BEFORE INSERT OR UPDATE ON SISTEMA.COMPRA
FOR EACH ROW
BEGIN

    SELECT (:NEW.CRP_VALOR - :NEW.CRP_DESCONTO) INTO :NEW.CRP_TOTAL
    FROM   DUAL;
    
END;  

CREATE TABLE SISTEMA.VENDA(
    VDA_CODIGO   INTEGER NOT NULL,
    USU_CODIGO   INTEGER NOT NULL,
    CLI_CODIGO   INTEGER NOT NULL,
    VDA_DATA     DATE NOT NULL,
    VDA_VALOR    DECIMAL(10,2),
    VDA_DESCONTO DECIMAL(10,2),
    VDA_TOTAL    DECIMAL(10,2),
    VDA_OBS      VARCHAR2(100)
);

ALTER TABLE SISTEMA.VENDA
    ADD CONSTRAINT PK_VENDA
    PRIMARY KEY(VDA_CODIGO);
    
ALTER TABLE SISTEMA.VENDA
    ADD CONSTRAINT FK_USUARIO_VENDA
    FOREIGN KEY(USU_CODIGO) REFERENCES SISTEMA.USUARIO;

ALTER TABLE SISTEMA.VENDA
    ADD CONSTRAINT FK_CLIENTE_VENDA
    FOREIGN KEY(CLI_CODIGO) REFERENCES SISTEMA.CLIENTE;
    
CREATE SEQUENCE SQE_VENDA
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCACHE;

CREATE TRIGGER TRG_VENDA_AUTO BEFORE INSERT ON SISTEMA.VENDA
FOR EACH ROW 
BEGIN

    SELECT SQE_VENDA.NEXTVAL INTO :NEW.VDA_CODIGO
    FROM   DUAL;

END;

CREATE OR REPLACE TRIGGER TRG_VENDA_TOTAL BEFORE INSERT OR UPDATE ON SISTEMA.VENDA
FOR EACH ROW
BEGIN

    SELECT (:NEW.VDA_VALOR - :NEW.VDA_DESCONTO) INTO :NEW.VDA_TOTAL
    FROM   DUAL;
    
END;
    
-- ENTIDADE AUXILIAR VENDA_PAGTO.
CREATE TABLE SISTEMA.VENDA_PAGTO(
    VDP_CODIGO INTEGER NOT NULL,
    VDA_CODIGO INTEGER NOT NULL,
    FPG_CODIGO INTEGER NOT NULL,
    VDP_VALOR  DECIMAL(10,2)
);

ALTER TABLE SISTEMA.VENDA_PAGTO
    ADD CONSTRAINT PK_VENDAPAGTO
    PRIMARY KEY(VDP_CODIGO);
    
ALTER TABLE SISTEMA.VENDA_PAGTO
    ADD CONSTRAINT FK_VENDA_VENDAPAGTO
    FOREIGN KEY(VDA_CODIGO) REFERENCES SISTEMA.VENDA;

ALTER TABLE SISTEMA.VENDA_PAGTO
    ADD CONSTRAINT FK_FORMAPAGTO_VENDAPAGTO
    FOREIGN KEY(FPG_CODIGO) REFERENCES SISTEMA.FORMAPAGTO;

CREATE SEQUENCE SQE_VENDA_PAGTO
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCACHE;

CREATE TRIGGER TRG_VENDA_PAGTO_AUTO BEFORE INSERT ON SISTEMA.VENDA_PAGTO
FOR EACH ROW 
BEGIN

    SELECT SQE_VENDA_PAGTO.NEXTVAL INTO :NEW.VDP_CODIGO
    FROM   DUAL;

END;

-- ENTIDADE AUXILIAR VENDA_PRODUTO
CREATE TABLE SISTEMA.VENDA_PRODUTO(
    VEP_CODIGO   INTEGER NOT NULL,
    VDA_CODIGO   INTEGER NOT NULL,
    PRO_CODIGO   INTEGER NOT NULL,
    VEP_QTDE     INTEGER, 
    VEP_PRECO    DECIMAL(10,2),
    VEP_DESCONTO DECIMAL(10,2),
    VEP_TOTAL    DECIMAL(10,2)
);

ALTER TABLE SISTEMA.VENDA_PRODUTO
    ADD CONSTRAINT PK_VENDA_PRODUTO
    PRIMARY KEY(VEP_CODIGO);
    
ALTER TABLE SISTEMA.VENDA_PRODUTO
    ADD CONSTRAINT FK_VENDA_VENDAPRODUTO
    FOREIGN KEY(VDA_CODIGO) REFERENCES SISTEMA.VENDA;
    
ALTER TABLE SISTEMA.VENDA_PRODUTO
    ADD CONSTRAINT FK_PRODUTO_VENDAPRODUTO
    FOREIGN KEY(PRO_CODIGO) REFERENCES SISTEMA.PRODUTO;

CREATE SEQUENCE SQE_VENDA_PRODUTO
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCACHE;

CREATE TRIGGER TRG_VENDA_PRODUTO_AUTO BEFORE INSERT ON SISTEMA.VENDA_PRODUTO
FOR EACH ROW 
BEGIN

    SELECT SQE_VENDA_PRODUTO.NEXTVAL INTO :NEW.VEP_CODIGO
    FROM   DUAL;

END;

CREATE OR REPLACE TRIGGER TRG_VENDA_PRODUTO_TOTAL BEFORE INSERT OR UPDATE ON SISTEMA.VENDA_PRODUTO
FOR EACH ROW
BEGIN 

    SELECT (:NEW.VEP_QTDE * :NEW.VEP_PRECO) - :NEW.VEP_DESCONTO INTO :NEW.VEP_TOTAL
    FROM   DUAL;
    
END;
    
-- ENTIDADE AUXILIAR COMPRA_PRODUTO
CREATE TABLE SISTEMA.COMPRA_PRODUTO(
    CPP_CODIGO   INTEGER NOT NULL,
    CRP_CODIGO   INTEGER NOT NULL,
    PRO_CODIGO   INTEGER NOT NULL,
    CPP_QTDE     INTEGER,
    CPP_PRECO    DECIMAL(10,2),
    CPP_DESCONTO DECIMAL(10,2),
    CPP_TOTAL    DECIMAL(10,2)
);

ALTER TABLE SISTEMA.COMPRA_PRODUTO
    ADD CONSTRAINT PK_COMPRA_PRODUTO
    PRIMARY KEY(CPP_CODIGO);

ALTER TABLE SISTEMA.COMPRA_PRODUTO
    ADD CONSTRAINT FK_COMPRA_COMPRAPRODUTO
    FOREIGN KEY(CRP_CODIGO) REFERENCES SISTEMA.COMPRA;
    
ALTER TABLE SISTEMA.COMPRA_PRODUTO
    ADD CONSTRAINT FK_PRODUTO_COMPRAPRODUTO
    FOREIGN KEY(PRO_CODIGO) REFERENCES SISTEMA.PRODUTO;

CREATE SEQUENCE SQE_COMPRA_PRODUTO
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999999
    MINVALUE 1
    NOCACHE;

CREATE TRIGGER TRG_COMPRA_PRODUTO_AUTO BEFORE INSERT ON SISTEMA.COMPRA_PRODUTO
FOR EACH ROW 
BEGIN

    SELECT SQE_COMPRA_PRODUTO.NEXTVAL INTO :NEW.CPP_CODIGO
    FROM   DUAL;

END;

CREATE OR REPLACE TRIGGER TRG_COMPRA_PRODUTO_TOTAL BEFORE INSERT OR UPDATE ON SISTEMA.COMPRA_PRODUTO
FOR EACH ROW
BEGIN 

    SELECT (:NEW.CPP_QTDE * :NEW.CPP_PRECO) - :NEW.CPP_DESCONTO INTO :NEW.CPP_TOTAL
    FROM   DUAL;
    
END;

SELECT * FROM SISTEMA.PESSOA;

